#
# Rev   : 1.02
# Date  : 04/05/2006
# By    : Jeremy Chartier
#
# Modifications :
# 04/05/2006 : Correct % bug
#



sub same_src_dst_attack {
$i=0;
my $description = $lang{"s0_". $val_opt_l};
if ( ( $opt_n != 1 ) || ( $val_opt_n > keys(%s0) ) ) {
	$n = keys %s0;
} else {
	$n = $val_opt_n;
}
if ( $opt_o == 1 ) {
	print FILEOUT ("<h3><CENTER><a name=\"same_src_dst_attack\" href=\"#top\">$description</a></CENTER></h3>\n");
	print FILEOUT ("<TABLE BORDER=$border ALIGN=CENTER>\n");
	print FILEOUT ("<TR CLASS=TH align=center><td>%</td><td>No</td><td>IP Source</td><td>IP Destination</td><td>Attack</td></tr>\n");
	if ($opt_i == 1) {
		foreach $k (sort { $s0{$a} <=> $s0{$b} } keys %s0) { 
			@_ = split ",",$k;
			printf FILEOUT ("<tr class=TB><td>%-2.2f</td><td>%-${nb_len}d</td><td>%-${addr_len}s</td><td>%-${addr_len}s</td><td>%-${attack_len}s</td></tr>\n", $s0{$k}/$total_log*100, $s0{$k},$_[1],$_[0],$_[2]) if $i < $n;
			++$i;
		}
	} else {
		foreach $k (sort { $s0{$b} <=> $s0{$a} } keys %s0) { 
			@_ = split ",",$k;
			printf FILEOUT ("<tr class=TB><td>%-2.2f</td><td>%-${nb_len}d</td><td>%-${addr_len}s</td><td>%-${addr_len}s</td><td>%-${attack_len}s</td></tr>\n", $s0{$k}/$total_log*100, $s0{$k},$_[1],$_[0],$_[2]) if $i < $n;
			++$i;
		}
	}
	print FILEOUT ("</table><BR>\n");
} else {
	if ( $opt{x} ) {
		open (FILEOUT, ">$tmpout_file") or die "Can not open file: $tmpout_file\n";
		print FILEOUT "$description\n";
		$linelength = 13 + $nb_len + 4 + $addr_len + 4 + $addr_len + 4 + $attack_len;
		print FILEOUT ( '=' x $linelength, "\n");
		print FILEOUT (" " x 4, "### ". $n ." of ". keys(%s0) ." ###\n");
		print FILEOUT ("    %    No      IP source        IP destination   Attack\n");
		print FILEOUT ( '=' x $linelength, "\n");
		if ($opt_i == 1) {
			foreach $k (sort { $s0{$a} <=> $s0{$b} } keys %s0) { 
				@_ = split ",",$k;
				printf FILEOUT ("  %-5.2f  %-${nb_len}d  %-${addr_len}s  %-${addr_len}s  %-10s\n",
				$s0{$k}/$total_log*100, $s0{$k},$_[1],$_[0],$_[2]) if $i < $n;
				++$i;
			}
		} else {
			foreach $k (sort { $s0{$b} <=> $s0{$a} } keys %s0) { 
				@_ = split ",",$k;
				printf FILEOUT ("  %-5.2f  %-${nb_len}d  %-${addr_len}s  %-${addr_len}s  %-10s\n",
				$s0{$k}/$total_log*100, $s0{$k},$_[1],$_[0],$_[2]) if $i < $n;
				++$i;
			}
		}
		close (FILEOUT);
		open (FILEIN, "<$tmpout_file") or die "Can access file : $tmpout_file\n";
		while (<FILEIN>) {
			chomp $_;
			$scrolled_result->insert('end', "$_\n");
		}
		close (FILEIN);
		$scrolled_result->insert('end', "\n");
	} else {	
		section_header("$description\n", "same_src_dst_attack");
		if ($opt_i == 1) {
			foreach $k (sort { $s0{$a} <=> $s0{$b} } keys %s0) { 
				@_ = split ",",$k;
				printf("  %-5.2f  %-${nb_len}d  %-${addr_len}s  %-${addr_len}s  %-10s\n",
				$s0{$k}/$total_log*100, $s0{$k},$_[1],$_[0],$_[2]) if $i < $n;
				++$i;
			}
		} else {
			foreach $k (sort { $s0{$b} <=> $s0{$a} } keys %s0) { 
				@_ = split ",",$k;
				printf("  %-5.2f  %-${nb_len}d  %-${addr_len}s  %-${addr_len}s  %-10s\n",
				$s0{$k}/$total_log*100, $s0{$k},$_[1],$_[0],$_[2]) if $i < $n;
				++$i;
			}
		}
	}
}
}

1;
