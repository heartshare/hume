*filter
:INPUT ACCEPT [10276:1578052]
:FORWARD ACCEPT [0:0]
:OUTPUT ACCEPT [13784:16761487]
-A INPUT -s 10.0.0.0/255.0.0.0 -i eth1 -j DROP
-A INPUT -s 172.16.0.0/255.240.0.0 -i eth1 -j DROP
-A INPUT -s 192.168.0.0/255.255.0.0 -i eth1 -j DROP
# anti Sync Flood
-A FORWARD -p tcp -m tcp --tcp-flags SYN,RST,ACK SYN -m limit --limit 1/sec -j ACCEPT
# anti some port scan
-A FORWARD -p tcp -m tcp --tcp-flags FIN,SYN,RST,ACK RST -m limit --limit 1/sec -j ACCEPT
# anti ping of death
-A FORWARD -p icmp -m icmp --icmp-type 8 -m limit --limit 1/sec -j ACCEPT
COMMIT




#头两行是注释说明
# Firewall configuration written by system-config-securitylevel
# Manual customization of this file is not recommended.
#使用filter表
*filter
#下面四条内容定义了内建的INPUT、FORWAARD、ACCEPT链，还创建了一个被称为RH-Firewall-1-INPUT 的新链
:INPUT ACCEPT [0:0]
:FORWARD ACCEPT [0:0]
:OUTPUT ACCEPT [0:0]
:RH-Firewall-1-INPUT - [0:0]
#将所有流入的数据写入到日志文件中
-A INPUT -j LOG --log-level crit
#下面这条规则将添加到INPUT链上，所有发往INPUT链上的数据包将跳转到RH-Firewall-1链上。
-A INPUT -j RH-Firewall-1-INPUT
#下面这条规则将添加到FORWARD链上，所有发往INPUT链上的数据包将跳转到RH-Firewall-1链上。
-A FORWARD -j RH-Firewall-1-INPUT
#下面这条规则将被添加到RH-Firewall-1-input链。它可以匹配所有的数据包，其中流入接口（-i）是一个环路接口(lo)。
#匹配这条规则的数据包将全部通过（ACCEPT），不会再使用别的规则来和它们进行比较
-A RH-Firewall-1-INPUT -i lo -j ACCEPT
#下面这条规则是拒绝所以的icmp包-p 后是协议如：icmp、tcp、udp。端口是在-p后面--sport源端口，--dport目的端口。-j 指定数据包发送的
#目的地址如：ACCEPT、DROP、QUEUE等等
-A RH-Firewall-1-INPUT -p icmp --icmp-type any -j DROP
-A RH-Firewall-1-INPUT -p 50 -j ACCEPT
-A RH-Firewall-1-INPUT -p 51 -j ACCEPT
-A RH-Firewall-1-INPUT -p udp --dport 5353 -d 224.0.0.251 -j ACCEPT
-A RH-Firewall-1-INPUT -p udp -m udp --dport 631 -j ACCEPT
-A RH-Firewall-1-INPUT -p tcp -m tcp --dport 631 -j ACCEPT
-A RH-Firewall-1-INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT
#-m state --state ESTABLISHED,RELATED 这个条件表示所有处于ESTABLISHED或者RELATED状态的包，策略都是接受的。
#-m state --state NEW 这个条件是当connection的状态为初始连接(NEW)时候的策略。
-A RH-Firewall-1-INPUT -m state --state NEW -m tcp -p tcp --dport 21 -j ACCEPT
-A RH-Firewall-1-INPUT -m state --state NEW -m tcp -p tcp --dport 2049 -j ACCEPT
-A RH-Firewall-1-INPUT -m state --state NEW -m tcp -p tcp --dport 22 -j ACCEPT
-A RH-Firewall-1-INPUT -m state --state NEW -m udp -p udp --dport 137 -j ACCEPT
-A RH-Firewall-1-INPUT -m state --state NEW -m udp -p udp --dport 138 -j ACCEPT
-A RH-Firewall-1-INPUT -m state --state NEW -m tcp -p tcp --dport 139 -j ACCEPT
-A RH-Firewall-1-INPUT -m state --state NEW -m tcp -p tcp --dport 445 -j ACCEPT
-A RH-Firewall-1-INPUT -m state --state NEW -m tcp -p tcp --dport 23 -j ACCEPT
-A RH-Firewall-1-INPUT -m state --state NEW -m tcp -p tcp --dport 80 -j DROP -s 222.221.7.84
-A RH-Firewall-1-INPUT -m state --state NEW -m tcp -p tcp --dport 80 -j ACCEPT
-A RH-Firewall-1-INPUT -m state --state NEW -m tcp -p tcp --dport 443 -j ACCEPT
-A RH-Firewall-1-INPUT -m state --state NEW -m tcp -p tcp --dport 25 -j ACCEPT
-A RH-Firewall-1-INPUT -j REJECT --reject-with icmp-host-prohibited
COMMIT



iptables -I INPUT 1 -p tcp --dport 2000 -j ACCEPT：上面的数字1表示将这条规则插入到INPUT链中的第一条规则之上



<<<<<<< HEAD
对应关系
INPUT –dport -s
OUTPUT –sport -d
添加规则
iptables -A INPUT|OUTPUT -s 源IP -d 目的IP -p all|tcp|udp|icmp –sport 源端口 –dport 目的端口 -j ACCEPT|DROP
iptables -A FORWARD -i 输入网卡 -o 输出网卡 -m state –state RELATED,ESTABLISHED -j ACCEPT|DROP
iptables -t nat -A PREROUTING -i 输入网卡 -s 源IP -d 目的IP –sport 源端口 –dport 目的端口 -j ACCEPT|DROP
删除规则
iptables -D INPUT|OUTPUT -s 源IP -d 目的IP -p all|tcp|udp|icmp –dport 端口 -j ACCEPT|DROP
iptables -D FORWARD -i 输入网卡 -o 输出网卡 -m state –state RELATED,ESTABLISHED -j ACCEPT|DROP

一、INPUT|OUTPUT链
1、允许rsync到远程服务器
iptables -A OUTPUT -p tcp –sport 873 -d 目的IP -j ACCEPT
2、允许WWW服务的80端口
iptables -A INPUT -p tcp –dport 80 -j ACCEPT
iptables -A OUTPUT -p tcp –dport 80 -j ACCEPT
3、允许邮件服务的25和110端口
iptables -A INPUT -p tcp –dport 25 -j ACCEPT
iptables -A OUTPUT -p tcp –dport 25 -j ACCEPT
iptables -A INPUT -p tcp –dport 110 -j ACCEPT
iptables -A OUTPUT -p tcp –dport 110 -j ACCEPT
4、允许FTP服务的21和20端口
iptables -A INPUT -p tcp –dport 21 -j ACCEPT
iptables -A OUTPUT -p tcp –dport 21 -j ACCEPT
iptables -A INPUT -p tcp –dport 20 -j ACCEPT
iptables -A OUTPUT -p tcp –dport 20 -j ACCEPT
5、允许DNS服务的53端口
iptables -A INPUT -p tcp –dport 53 -j ACCEPT
iptables -A OUTPUT -p tcp –dport 53 -j ACCEPT
6、允许rsync的873端口
iptables -A INPUT -p all –dport 873 -j ACCEPT
iptables -A OUTPUT -p all –sport 873 -j ACCEPT
7、允许NRPE的5666端口
iptables -A INPUT -s 源IP -p all –dport 5666 -j ACCEPT
iptables -A OUTPUT -d 目的IP -p all –sport 5666 -j ACCEPT
8、允许Ping
iptables -A INPUT -p icmp -j ACCEPT
iptables -A OUTPUT -p icmp -j ACCEPT
9、允许loopback!(不然会导致DNS无法正常关闭等问题)
iptables -A INPUT -i lo -p all -j ACCEPT
iptables -A OUTPUT -o lo -p all -j ACCEPT
10、只允许某IP或某网段的机器进行SSH连接
iptables -A INPUT -s 192.168.0.8|192.168.0.0/24 -p tcp –dport 22 -j ACCEPT
11、允许所有已经建立的和相关的连接
iptables -A INPUT -m state –state ESTABLISHED,RELATED -j ACCEPT
iptables -A OUTPUT -m state –state ESTABLISHED,RELATED -j ACCEPT
12、拒绝非法连接
iptables -A INPUT -m state –state INVALID -j DROP
iptables -A OUTPUT -m state –state INVALID -j DROP

二、FORWARD链
1、开启转发功能(在做NAT时,FORWARD默认规则是DROP时,必须做)
iptables -A FORWARD -i eth0 -o eth1 -m state –state RELATED,ESTABLISHED -j ACCEPT
iptables -A FORWARD -i eth1 -o eh0 -j ACCEPT
2、丢弃坏的TCP包
iptables -A FORWARD -p TCP ! –syn -m state –state NEW -j DROP
3、处理IP碎片数量,防止攻击,允许每秒100个
iptables -A FORWARD -f -m limit –limit 100/s –limit-burst 100 -j ACCEPT
4、设置ICMP包过滤,允许每秒1个包,限制触发条件是10个包.
iptables -A FORWARD -p icmp -m limit –limit 1/s –limit-burst 10 -j ACCEPT
5、禁止非法连接
iptables -A FORWARD -m state –state INVALID -j DROP

三、NAT表
1、防止外网用内网IP欺骗
iptables -t nat -A PREROUTING -i eth0 -s 10.0.0.0/8 -j DROP
iptables -t nat -A PREROUTING -i eth0 -s 172.16.0.0/12 -j DROP
iptables -t nat -A PREROUTING -i eth0 -s 192.168.0.0/16 -j DROP
2、禁止与某IP或IP段的所有连接
iptables -t nat -A PREROUTING -d 192.168.0.8|192.168.0.0/24 -j DROP
3、禁止连接某IP或IP段的FTP的21端口
iptables -t nat -A PREROUTING -p tcp –dport 21 -d 192.168.0.8|192.168.0.0/24 -j DROP

=======



iptables -t nat -A PREROUTING -s 192.168.18.0/24 -i eth0 -p tcp -m tcp –dport 80 -j DNAT –to-destination 192.168.18.1:3128

iptables -t nat -A POSTROUTING -j MASQUERADE
>>>>>>> 11d7be701806050929c2f125fa568c1e6574e292






# Prevent SSH Attack
iptables -A INPUT -i eth0 -p tcp --dport 22 -m state --state NEW -m recent --set --name SSH
iptables -A INPUT -i eth0 -p tcp --dport 22 -m state --state NEW -m recent --update --seconds 60 --hitcount 3 --name SSH -j DROP
# Enable Normal SSH Connection
iptables -A INPUT -p tcp -m state --state NEW --dport 22 -j ACCEPT






iptables -t mangle -N LMT
iptables -t mangle -N LMT2
iptables -t mangle -I FORWARD -d 192.168.1.100 -m length --length 128: -j LMT
iptables -t mangle -A LMT -m recent --rdest --name badguy --rcheck --seconds 60 -j LMT2
iptables -t mangle -A LMT -m limit --limit 100/sec --limit-burst 5000 -j RETURN
iptables -t mangle -A LMT -m recent --rdest --name badguy --set -j RETURN
iptables -t mangle -A LMT2 -m limit --limit 50/sec --limit-burst 5000 -j RETURN
iptables -t mangle -A LMT2 -j DROP
复制代码

上面代码是用limit限制计算速率，为了更准确，使用了数据包长度筛选: “-m length --length 128:”，这样更准确一点。
一般限制为100/s，按照数据包平均大小1000Bytes来算，大概就是100KB/S。
如果超出，限制变为50/sec，大约50KB/S。

当然，这只是一个示范性的例子了，其中limit模块也可以改用更为强大的hashlimit，hashsped等模块。
还可以用connlimit使用连接数作为限制条件。。。。。。。。。。
如果再把这些模块结合MARK和TC流量控制，就实现了某些路由器的所谓“条件限速”“P2P惩罚”等功能。








echo "starting ip forward"
echo 1 >/proc/sys/net/ipv4/ip_forward
echo "starting iptables rules"
modprobe ip_tables
modprobe ip_nat_ftp
/sbin/iptables -F -t nat
iptables -t nat -A PREROUTING -i eth0 -p tcp -m tcp --dport 80 -jREDIRECT --to-ports3128
#将所有80#端口的包转发到3128端口
iptables -t nat -A POSTROUTING -o eth0 -jMASQUERADE
#对eth0端口进行欺骗,单网卡用不到





rhel5下，netfilter默认支持string关键词过滤
 
比如你的firewall下有一个ftp服务，ftp的目录里面有一个 pub目录，你不想让192.168.0.100这ip地址访问这个目录，就是当用户一点出发pub这个字符串时，被阻止，可以这么来做。
 
iptables -I INPUT -p tcp --dport 21 -m string --string "pub" --algo bm -j DROP
 
比如你在网关服务器上想限制内部网络 192.168.0.0这个网段浏览含有 qq这字符串的任何网页，可以这么来做
iptables -I FORWARD -p tcp --dport 80 -m string --string "qq" --algo bm -j DROP
 
这些在rhel5下测试都是ok的。注意上面2个里面中的 --algo bm作用是匹配linux内核中的文本搜索算法（位于内核源码linux/lib目录中）
算法常用的有 bm 和kmp