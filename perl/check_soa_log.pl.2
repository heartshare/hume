#!/usr/bin/perl 
#===============================================================================
#
#         FILE: check_soa_log.pl
#
#        USAGE: ./check_soa_log.pl  
#
#  DESCRIPTION: 
#
#      OPTIONS: ---
# REQUIREMENTS: ---
#         BUGS: ---
#        NOTES: ---
#       AUTHOR:  (), |whymaths@gmail.com|
#      COMPANY: 
#      VERSION: 1.0
#      CREATED: 09/07/2012 04:34:32 PM
#     REVISION: ---
#===============================================================================

use strict;
use warnings;


use File::ReadBackwards;

my %logfile;
my $errordb_msg = "";
my %msg;

my $log_pos;

$logfile{8002} = "/opt/newtw/log/server/rmi_8002/rmi_8002_error.log";
$logfile{8003} = "/opt/newtw/log/server/rmi_8003/rmi_8003_error.log";


map {
    do_job($logfile{$_}, $_);
    system("echo '================check for database connection error=================' >>$logfile{$_}");
} qw(8002 8003);


sub do_job($$) {

    my $file = shift;
    my $port = shift;


    my $cond_dao = 0;
    my $cond_service = 0;
    my $dbname = "";

    my $itr = 0;

    my $bw = File::ReadBackwards->new( "$file" ) or return;

    until ( $bw->eof ) {
        return if $itr >= 1000000;
        $itr++;

        my $line = $bw->readline;
        chomp $line;

        return if $line =~ m/================check\ for\ database\ connection\ error=================/gmx;
        #if ($line =~ m/com\.sohu\.twitter\.[a-zA-Z]+\.service\.impl/gmx) {
        if ($line =~ m/com\.sohu\.twitter\.\S+\.service\.impl/gmx) {
            $cond_service = 1;
        }

        #if ($line =~ m/com\.sohu\.twitter\.[a-zA-Z]+\.dao\.impl\.([a-zA-Z]+)DaoImpl/gmx) {
        if ($line =~ m/com\.sohu\.twitter\.\S+\.dao\.([a-zA-Z]+)DaoImpl/gmx) {
            $cond_dao = 1;
            $dbname = $1;
        }

        if ($line =~ m/Too\ many\ connections/gmx) {
               if ($cond_dao == 1 && $cond_service == 1 ) {
                   $msg{"$port:$dbname"} = 1;
               }
            $cond_dao = 0;
            $cond_service = 0;
            $dbname = "";
            #print "$cond_toomany\n";
        }

    }

}


open my $tmp_out, "> /tmp/soa_log" or die "$!";

map {
    $errordb_msg .= "$_ ";
} sort keys %msg;

print $tmp_out "$errordb_msg\n";
print "$errordb_msg\n";


close $tmp_out;
